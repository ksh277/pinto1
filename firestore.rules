rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return request.auth != null && request.auth.token.roles.hasAny(['admin']);
    }

    match /community/{postId} {
      allow read: if resource.data.status != 'hidden' || isAdmin();

      allow create: if request.auth != null
        && request.resource.data.author.uid == request.auth.uid
        && (
          (request.resource.data.type == 'notice' && isAdmin())
          || (
            request.resource.data.type in ['discussion', 'design_share']
            && request.resource.data.productId is string
            && request.resource.data.title is string
            && request.resource.data.body is string
          )
        );

      allow update: if request.auth != null && (
        (resource.data.author.uid == request.auth.uid && request.resource.data.status == resource.data.status)
        || isAdmin()
      );

      allow delete: if request.auth != null &&
        (resource.data.author.uid == request.auth.uid || isAdmin());
    }

    match /community/{postId}/attachments/{fileId} {
      allow read: if true;
      allow create, delete: if request.auth != null && (
        get(/databases/$(database)/documents/community/$(postId)).data.author.uid == request.auth.uid
        || isAdmin()
      );
    }

    // products/{pid}/likes/{uid} — 로그인한 본인만 토글 가능
    match /products/{pid}/likes/{uid} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == uid;
    }

    // products/{pid}/reviews/{rid} — 본인만 수정/삭제
    match /products/{pid}/reviews/{rid} {
      allow read: if true;
      allow create: if request.auth != null
        && request.resource.data.rating >= 1
        && request.resource.data.rating <= 5
        && request.resource.data.author.uid == request.auth.uid;
      allow update, delete: if request.auth != null
        && request.auth.uid == resource.data.author.uid;
    }
  }
}
